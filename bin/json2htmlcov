#!/usr/bin/env node

// https://github.com/metaskills/mocha-phantomjs/issues/10
var jade    = require('jade');
var fs      = require('fs');
var program = require('commander');

program
  .version('0.2.0')
  .usage('[options] <file ...>')
  .parse(process.argv);

// Strings for code coverage classes
function coverageClass(n) {
  if (n >= 75) return 'high';
  if (n >= 50) return 'medium';
  if (n >= 25) return 'low';
  return 'terrible';
}

// Read in templates
var file = __dirname + '/templates/coverage.jade';
var str  = fs.readFileSync(file, 'utf8');
var fn   = jade.compile(str, { filename: file });

// // Read JSON from stdin
var jsonString = fs.readFileSync(program.args[0]).toString();
var coverage = JSON.parse(jsonString);

// Dump HTML
process.stdout.write(fn({
  cov: coverage,
  coverageClass: coverageClass
}));
